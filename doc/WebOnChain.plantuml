@startuml
participant "End user" as user
participant "Browser" as ui
participant "Thyra server" as thyra
participant "Hosting websites" as web
participant "Wallet" as w
participant "DNS" as dns
participant "Event Manager" as em
participant "Storage" as storage
participant "Node (API)" as node

user -> ui: click on install 'Web on-chain' plug-in
ui -> thyra: GET /plugin/webOn-Chain
thyra -> web: GET /plugin/webOn-Chain
web -> thyra: OK response
thyra -> ui: display landing page WebOnChain.massa
user -> ui: Click on "websites" page
ui -> thyra: GET /plugin/wallet
thyra -> w: GET /plugin/wallet/list
w -> w: is there any wallet?
w -> thyra: KO response - Wallet-4001 error
thyra -> web: KO response - Wallet-4001 error
web -> ui: KO response - display Wallet-4001
ui -> user: Error Wallet-4001 displayed
w -> thyra: OK response
thyra -> web: OK response
web ->ui: list of existing wallet
ui -> user: display list of wallet
ui ->thyra: GET /dns
thyra -> dns: GET /dns/my/domains/{nickname}
dns -> node: GET /dns/dns/my/domain/{nickname}
node -> node: Does any DNS exist on this address?
node -> dns: KO response
dns -> thyra: KO response - Domain-0001
thyra -> web: KO response - Domain-0001
web -> ui: display Domain-0001 error
ui -> user: Error Domain-0001 displayed
node -> dns: OK response
dns -> thyra: OK response
thyra -> web: OK response
web ->ui: OK response
ui -> user: list of DNS owned
node -> node: Is there any websites linkef your SC address?
node -> dns: KO response 
dns -> thyra: KO response - Domain-0002
thyra -> web: KO response - Domain-0002
web -> ui: display Domain-0002 error
ui -> user: Error Domain-0002 displayed

user -> ui: click on deploy website to Massa (create request)
ui -> thyra: PUT /plugin/webOn-chain/website/prepare
thyra -> web: PUT /plugin/webOn-chain/website/prepare
web -> thyra: GET /plugin/wallet/operationId
thyra ->w: GET /plugin/wallet/operationId/{nickname}
w -> thyra: GUI password
thyra -> user: GUI password
user -> thyra: Password entry
thyra ->w: Password entry
w ->w: is the password matching?
w ->thyra: KO response - Wallet-0002
thyra ->ui: KO reponse - Wallet-0002
ui -> user: Error Wallet-0002 displayed
w -> thyra: OK response
thyra -> web: OK reponse
web->web: is the file in .zip format?
web->thyra: KO reponse - WebCreator-1001
thyra ->ui: display WebCreator-1001 error
ui ->user: Error WebCreator-1001 displayed
web-> web: is the size smaller than the limit?
web->thyra: KO response - WebCreator-1004
thyra ->ui: display WebCreator-1004 error
ui->user: Error WebCreator-1004 displayed
web ->web: is the index.html at the root?
web -> thyra: KO response - WebCreator-XXXX
thyra ->ui: display WebCreator-XXXX error
ui->user: Error WebCreator-XXXX displayed
web -> dns: POST /cmd/executeFunction/CreateSC/operationId
dns-> dns: does this domain name already exist?
dns->web: KO response - WebCreator-XXXX
web->thyra: KO response - WebCreator-XXXX
thyra->ui: display WebCreator-XXXX error
ui->user: Error WebCreator-XXX displayed
dns -> dns: is there any special characters in the domain name?
dns ->web: KO response - WebCreator-XXXX
web->thyra: KO response - WebCreator-XXXX
thyra ->ui: display WebCreator-XXXX error
ui->user: Error WebCreator-XXXX displayed
dns ->web: OK response
web-> storage: POST /websiteCretor/upload/operationId
storage ->node: POST /cmd/executeFunction/operationId
node->node: CreateSC
node->storage: KO response
storage->web: KO response 
web->thyra: KO response
thyra ->ui: KO response
ui->user: KO response
node ->storage: OK response
storage -> node: POST /cmd/executeFunction/operationId
node -> node: ExecuteSC
node -> node: create container?
em -> node: je ne vois pas de call pour le container
em -> node: GET /thyra/events/resolver/{caller}
node -> node: is the resolver set?
node -> em: KO response
em->web: KO response
web->thyra: KO response
thyra->ui: KO response
ui->user: KO response
node->em: OK response
node -> em: OK response
node -> node: chunk X uploaded?
em -> node: GET /thyra/events/chunk/{caller}
node -> em: KO response 
em->web: KO response
web->thyra: KO response
thyra->ui: KO response
ui->user: KO response
node -> em: OK response
em->web: OK response
web->storage: POST /cmd/executeFunction/operationId
storage -> node: Execute Append function

@enduml