openapi: 3.0.3
info:
  title: thyra-server
  version: 0.0.0
  description: Thyra HTTP server API.
paths:
  '/thyra/wallet/{resource}':
    get:
      parameters:
        - name: resource
          description: Website resource.
          schema:
            default: index.html
            type: string
          in: path
          required: true
      responses:
        '200':
          description: Page found
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/html:
              schema:
                $ref: '#/components/schemas/Error'
            text/css:
              schema:
                $ref: '#/components/schemas/Error'
            text/webp:
              schema:
                $ref: '#/components/schemas/Error'
            image/png:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource not found.
      operationId: thyraWallet
  '/thyra/websiteCreator/{resource}':
    get:
      parameters:
        - name: resource
          description: Website resource.
          schema:
            default: index.html
            type: string
          in: path
          required: true
      responses:
        '200':
          description: Page found
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/html:
              schema:
                $ref: '#/components/schemas/Error'
            text/css:
              schema:
                $ref: '#/components/schemas/Error'
            text/webp:
              schema:
                $ref: '#/components/schemas/Error'
            image/png:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource not found.
      operationId: thyraWebsiteCreator
  '/thyra/registry/{resource}':
    get:
      parameters:
        - name: resource
          description: Website resource.
          schema:
            default: index.html
            type: string
          in: path
          required: true
      responses:
        '200':
          description: Page found
      operationId: thyraRegistry
  '/thyra/events/{str}/{caller}':
    get:
      parameters:
        - name: str
          description: Data content of the event.
          schema:
            type: string
          in: path
          required: true
        - name: caller
          description: Creator of the transaction that triggered the event.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Events'
          description: Event retrieved
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: >-
            Internal Server Error - The server has encountered a situation it
            does not know how to handle.
      operationId: thyraEventsGetter
  /mgmt/wallet:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Wallet'
          description: Wallets retrieved
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: >-
            Internal Server Error - The server has encountered a situation it
            does not know how to handle.
      operationId: mgmtWalletGet
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Wallet'
        required: true
        x-nullable: false
      responses:
        '204':
          description: Wallet imported.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: >-
            Unprocessable Entity - syntax is correct, but the server was unable
            to process the contained instructions.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: >-
            Internal Server Error - The server has encountered a situation it
            does not know how to handle.
      operationId: mgmtWalletImport
    post:
      requestBody:
        content:
          application/json:
            schema:
              required:
                - nickname
                - password
              type: object
              properties:
                nickname:
                  description: Wallet's short name.
                  type: string
                password:
                  description: Private key password.
                  type: string
        required: true
        x-nullable: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
          description: New wallet created.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: >-
            Unprocessable Entity - syntax is correct, but the server was unable
            to process the contained instructions.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: >-
            Internal Server Error - The server has encountered a situation it
            does not know how to handle.
      operationId: mgmtWalletCreate
  '/mgmt/wallet/{nickname}':
    get:
      parameters:
        - name: nickname
          description: Wallet's short name.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
          description: Wallet retrieved.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: >-
            Unprocessable Entity - syntax is correct, but the server was unable
            to process the contained instructions.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: >-
            Internal Server Error - The server has encountered a situation it
            does not know how to handle.
      operationId: mgmtWalletGetter
    delete:
      parameters:
        - name: nickname
          description: Wallet's short name.
          schema:
            type: string
          in: path
          required: true
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
          description: Wallet removed.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: >-
            Unprocessable Entity - syntax is correct, but the server was unable
            to process the contained instructions.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: >-
            Internal Server Error - The server has encountered a situation it
            does not know how to handle.
      operationId: mgmtWalletDelete
  '/my/domains/{nickname}':
    get:
      parameters:
        - name: nickname
          description: Wallet's short name.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Websites'
          description: Domains returned. May be empty.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: >-
            Internal Server Error - The server has encountered a situation it
            does not know how to handle.
      operationId: myDomainsGetter
  /websiteCreator/prepare:
    put:
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - url
                - nickname
                - zipfile
              type: object
              properties:
                url:
                  description: 'URL without dot (.), upper case and special characters'
                  pattern: '^[a-z0-9]+$'
                  type: string
                  x-nullable: false
                nickname:
                  description: Name of the Wallet in which the website will be deployed.
                  type: string
                  x-nullable: false
                zipfile:
                  format: binary
                  description: Website contents in a ZIP file.
                  type: string
                  x-nullable: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Websites'
          description: New website created.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: >-
            Unprocessable Entity - syntax is correct, but the server was unable
            to process the contained instructions.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: >-
            Internal Server Error - The server has encountered a situation it
            does not know how to handle.
      operationId: websiteCreatorPrepare
  /websiteCreator/upload:
    post:
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - address
                - nickname
                - zipfile
              type: object
              properties:
                address:
                  description: >-
                    Address where to deploy website. The account must have been
                    prepare to receive a website.
                  type: string
                  x-nullable: false
                nickname:
                  description: Wallet's nickname to be used for receiving the website
                  type: string
                  x-nullable: false
                zipfile:
                  format: binary
                  description: Website contents in a ZIP file.
                  type: string
                  x-nullable: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Websites'
          description: Website's chunk deployed.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: >-
            Unprocessable Entity - syntax is correct, but the server was unable
            to process the contained instructions.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: >-
            Internal Server Error - The server has encountered a situation it
            does not know how to handle.
      operationId: websiteCreatorUpload
  /websiteCreator/uploadMissingChunks:
    post:
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - address
                - nickname
                - zipfile
                - missedChunks
              type: object
              properties:
                address:
                  description: >-
                    Address where to deploy website. The account must have been
                    prepare to receive a website.
                  type: string
                  x-nullable: false
                nickname:
                  description: Wallet's nickname to be used for receiving the website
                  type: string
                  x-nullable: false
                zipfile:
                  format: binary
                  description: Website contents in a ZIP file.
                  type: string
                  x-nullable: false
                missedChunks:
                  description: Website missing chunks
                  type: string
                  x-nullable: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Websites'
          description: Website's chunk deployed.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: >-
            Unprocessable Entity - syntax is correct, but the server was unable
            to process the contained instructions.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: >-
            Internal Server Error - The server has encountered a situation it
            does not know how to handle.
      operationId: websiteUploadMissingChunks
  /cmd/executeFunction:
    post:
      requestBody:
        content:
          application/json:
            schema:
              default:
                nickname: test
                name: test
                at: A1MrqLgWq5XXDpTBH6fzXHUg7E8M5U2fYDAF3E1xnUSzyZuKpMh
                args: ''
                gaz:
                  price: 0
                  limit: 700000000
                coins: 0
                expiry: 3
                fee: 0
                keyId: default
              required:
                - nickname
                - name
                - at
              type: object
              properties:
                nickname:
                  nullable: false
                  description: Wallet's short name.
                  type: string
                name:
                  nullable: false
                  description: Function name to call.
                  type: string
                at:
                  nullable: false
                  description: Smart contract address exporting the function to call.
                  type: string
                args:
                  description: Arguments to pass to the function.
                  default: ''
                  type: string
                gaz:
                  description: >-
                    Gaz attibutes. Gaz is a virtual resource consumed by node
                    while running smart contract.
                  type: object
                  properties:
                    price:
                      description: Price of a gaz unit.
                      default: 0
                      type: number
                    limit:
                      description: >-
                        Maximum number of gaz unit that a node will be able
                        consume.
                      default: 700000000
                      type: integer
                coins:
                  description: >-
                    Set the fee amount (in massa) that will be given to the
                    block creator.
                  default: 0
                  type: number
                expiry:
                  description: >-
                    Set the expiry duration (in number of slots) of the
                    transaction.
                  default: 3
                  type: integer
                fee:
                  description: >-
                    Set the fee amount (in massa) that will be given to the
                    block creator.
                  default: 0
                  type: number
                keyId:
                  description: Defines the key to used to sign the transaction.
                  default: default
                  type: string
        required: true
        x-nullable: false
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Operation id.
                type: string
          description: OK.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: >-
            Unprocessable Entity - syntax is correct, but the server was unable
            to process the contained instructions.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: >-
            Internal Server Error - The server has encountered a situation it
            does not know how to handle.
      operationId: cmdExecuteFunction
  /kpi:
    get:
      parameters:
        - style: form
          explode: false
          name: scope
          schema:
            minItems: 0
            uniqueItems: true
            type: array
            items:
              enum:
                - wallet
                - node
                - stacking
                - blockchain
              type: string
          in: query
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  wallet:
                    type: array
                    items:
                      type: object
                      properties:
                        coin:
                          type: string
                        balance:
                          type: number
                  node:
                    type: array
                    items:
                      type: object
                      properties:
                        memory:
                          type: array
                          items:
                            type: number
                        cpu:
                          type: array
                          items:
                            type: number
                        storage:
                          type: array
                          items:
                            type: number
                        network:
                          type: array
                          items:
                            type: number
                  stacking:
                    type: array
                    items:
                      type: object
                      properties:
                        address:
                          type: string
                        rolls:
                          type: integer
                        slashing:
                          type: integer
                        gains:
                          type: number
          description: kpi message.
      operationId: kpi
  '/browse/{address}/{resource}':
    get:
      parameters:
        - name: address
          description: Address containing the website.
          schema:
            type: string
          in: path
          required: true
        - name: resource
          description: Website resource.
          schema:
            default: index.html
            type: string
          in: path
          required: true
      responses:
        '200':
          description: Resource retrieved.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/html:
              schema:
                $ref: '#/components/schemas/Error'
            text/css:
              schema:
                $ref: '#/components/schemas/Error'
            text/webp:
              schema:
                $ref: '#/components/schemas/Error'
            image/png:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/html:
              schema:
                $ref: '#/components/schemas/Error'
            text/css:
              schema:
                $ref: '#/components/schemas/Error'
            text/webp:
              schema:
                $ref: '#/components/schemas/Error'
            image/png:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource not found.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/html:
              schema:
                $ref: '#/components/schemas/Error'
            text/css:
              schema:
                $ref: '#/components/schemas/Error'
            text/webp:
              schema:
                $ref: '#/components/schemas/Error'
            image/png:
              schema:
                $ref: '#/components/schemas/Error'
          description: >-
            Internal Server Error - The server has encountered a situation it
            does not know how to handle.
      operationId: browse
  /all/domains:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registry'
          description: All domains returned.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: >-
            Internal Server Error - The server has encountered a situation it
            does not know how to handle.
      operationId: allDomainsGetter
components:
  schemas:
    Error:
      description: Error object.
      required:
        - code
        - message
      type: object
      properties:
        code:
          nullable: false
          description: error code.
          type: string
        message:
          nullable: false
          description: error message.
          type: string
    Wallet:
      description: Wallet object (V0).
      required:
        - nickname
        - address
        - keyPairs
      type: object
      properties:
        nickname:
          description: wallet's nickname.
          type: string
        address:
          description: wallet's address.
          type: string
        balance:
          description: wallet's balance.
          type: number
        keyPairs:
          description: wallet's key pairs.
          type: array
          items:
            required:
              - privateKey
              - publicKey
              - salt
              - nonce
            type: object
            properties:
              privateKey:
                format: base58check
                description: Key pair's private key.
                type: string
              publicKey:
                format: base58check
                description: Key pair's public key.
                type: string
              salt:
                format: base58check
                description: >-
                  Salt used by the PBKDF that generates the secret key used to
                  protect the key pair's private key.
                type: string
              nonce:
                format: base58check
                description: >-
                  Nonce used by the AES-GCM algorithm used to protect the key
                  pair's private key.
                type: string
    Websites:
      description: Websites object (V0).
      type: object
      properties:
        name:
          description: Website's name.
          type: string
        address:
          description: Website's address.
          type: string
        brokenChunks:
          description: >-
            Array of empty chunks if website contains preventing the website to
            load.
          type: array
          items:
            type: string
    Events:
      description: Events object (V0)
      type: object
      properties:
        data:
          description: Event data.
          type: string
        address:
          description: Event caller.
          type: string
    Registry:
      description: Registry object (V0).
      type: object
      properties:
        name:
          description: Website's name.
          type: string
        address:
          description: Website's address.
          type: string
        created_at:
          description: Creation date of the website.
          type: string
        updated_at:
          description: Update date of the website.
          type: string
