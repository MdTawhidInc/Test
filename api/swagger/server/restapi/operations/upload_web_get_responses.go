// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/massalabs/thyra/api/swagger/server/models"
)

// UploadWebGetOKCode is the HTTP code returned for type UploadWebGetOK
const UploadWebGetOKCode int = 200

/*UploadWebGetOK Websites retrieved

swagger:response uploadWebGetOK
*/
type UploadWebGetOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Websites `json:"body,omitempty"`
}

// NewUploadWebGetOK creates UploadWebGetOK with default headers values
func NewUploadWebGetOK() *UploadWebGetOK {

	return &UploadWebGetOK{}
}

// WithPayload adds the payload to the upload web get o k response
func (o *UploadWebGetOK) WithPayload(payload []*models.Websites) *UploadWebGetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the upload web get o k response
func (o *UploadWebGetOK) SetPayload(payload []*models.Websites) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UploadWebGetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Websites, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// UploadWebGetBadRequestCode is the HTTP code returned for type UploadWebGetBadRequest
const UploadWebGetBadRequestCode int = 400

/*UploadWebGetBadRequest Bad request.

swagger:response uploadWebGetBadRequest
*/
type UploadWebGetBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUploadWebGetBadRequest creates UploadWebGetBadRequest with default headers values
func NewUploadWebGetBadRequest() *UploadWebGetBadRequest {

	return &UploadWebGetBadRequest{}
}

// WithPayload adds the payload to the upload web get bad request response
func (o *UploadWebGetBadRequest) WithPayload(payload *models.Error) *UploadWebGetBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the upload web get bad request response
func (o *UploadWebGetBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UploadWebGetBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UploadWebGetInternalServerErrorCode is the HTTP code returned for type UploadWebGetInternalServerError
const UploadWebGetInternalServerErrorCode int = 500

/*UploadWebGetInternalServerError Internal Server Error - The server has encountered a situation it does not know how to handle.

swagger:response uploadWebGetInternalServerError
*/
type UploadWebGetInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUploadWebGetInternalServerError creates UploadWebGetInternalServerError with default headers values
func NewUploadWebGetInternalServerError() *UploadWebGetInternalServerError {

	return &UploadWebGetInternalServerError{}
}

// WithPayload adds the payload to the upload web get internal server error response
func (o *UploadWebGetInternalServerError) WithPayload(payload *models.Error) *UploadWebGetInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the upload web get internal server error response
func (o *UploadWebGetInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UploadWebGetInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
