// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/massalabs/thyra/api/swagger/server/models"
)

// UploadWebPutOKCode is the HTTP code returned for type UploadWebPutOK
const UploadWebPutOKCode int = 200

/*UploadWebPutOK First website chunk deployed.

swagger:response uploadWebPutOK
*/
type UploadWebPutOK struct {

	/*
	  In: Body
	*/
	Payload *models.Websites `json:"body,omitempty"`
}

// NewUploadWebPutOK creates UploadWebPutOK with default headers values
func NewUploadWebPutOK() *UploadWebPutOK {

	return &UploadWebPutOK{}
}

// WithPayload adds the payload to the upload web put o k response
func (o *UploadWebPutOK) WithPayload(payload *models.Websites) *UploadWebPutOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the upload web put o k response
func (o *UploadWebPutOK) SetPayload(payload *models.Websites) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UploadWebPutOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UploadWebPutBadRequestCode is the HTTP code returned for type UploadWebPutBadRequest
const UploadWebPutBadRequestCode int = 400

/*UploadWebPutBadRequest Bad request.

swagger:response uploadWebPutBadRequest
*/
type UploadWebPutBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUploadWebPutBadRequest creates UploadWebPutBadRequest with default headers values
func NewUploadWebPutBadRequest() *UploadWebPutBadRequest {

	return &UploadWebPutBadRequest{}
}

// WithPayload adds the payload to the upload web put bad request response
func (o *UploadWebPutBadRequest) WithPayload(payload *models.Error) *UploadWebPutBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the upload web put bad request response
func (o *UploadWebPutBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UploadWebPutBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UploadWebPutUnprocessableEntityCode is the HTTP code returned for type UploadWebPutUnprocessableEntity
const UploadWebPutUnprocessableEntityCode int = 422

/*UploadWebPutUnprocessableEntity Unprocessable Entity - syntax is correct, but the server was unable to process the contained instructions.

swagger:response uploadWebPutUnprocessableEntity
*/
type UploadWebPutUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUploadWebPutUnprocessableEntity creates UploadWebPutUnprocessableEntity with default headers values
func NewUploadWebPutUnprocessableEntity() *UploadWebPutUnprocessableEntity {

	return &UploadWebPutUnprocessableEntity{}
}

// WithPayload adds the payload to the upload web put unprocessable entity response
func (o *UploadWebPutUnprocessableEntity) WithPayload(payload *models.Error) *UploadWebPutUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the upload web put unprocessable entity response
func (o *UploadWebPutUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UploadWebPutUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UploadWebPutInternalServerErrorCode is the HTTP code returned for type UploadWebPutInternalServerError
const UploadWebPutInternalServerErrorCode int = 500

/*UploadWebPutInternalServerError Internal Server Error - The server has encountered a situation it does not know how to handle.

swagger:response uploadWebPutInternalServerError
*/
type UploadWebPutInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUploadWebPutInternalServerError creates UploadWebPutInternalServerError with default headers values
func NewUploadWebPutInternalServerError() *UploadWebPutInternalServerError {

	return &UploadWebPutInternalServerError{}
}

// WithPayload adds the payload to the upload web put internal server error response
func (o *UploadWebPutInternalServerError) WithPayload(payload *models.Error) *UploadWebPutInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the upload web put internal server error response
func (o *UploadWebPutInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UploadWebPutInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
