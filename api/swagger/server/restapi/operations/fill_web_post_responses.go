// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/massalabs/thyra/api/swagger/server/models"
)

// FillWebPostOKCode is the HTTP code returned for type FillWebPostOK
const FillWebPostOKCode int = 200

/*FillWebPostOK First website chunk deployed.

swagger:response fillWebPostOK
*/
type FillWebPostOK struct {

	/*
	  In: Body
	*/
	Payload *models.Websites `json:"body,omitempty"`
}

// NewFillWebPostOK creates FillWebPostOK with default headers values
func NewFillWebPostOK() *FillWebPostOK {

	return &FillWebPostOK{}
}

// WithPayload adds the payload to the fill web post o k response
func (o *FillWebPostOK) WithPayload(payload *models.Websites) *FillWebPostOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the fill web post o k response
func (o *FillWebPostOK) SetPayload(payload *models.Websites) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FillWebPostOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FillWebPostBadRequestCode is the HTTP code returned for type FillWebPostBadRequest
const FillWebPostBadRequestCode int = 400

/*FillWebPostBadRequest Bad request.

swagger:response fillWebPostBadRequest
*/
type FillWebPostBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewFillWebPostBadRequest creates FillWebPostBadRequest with default headers values
func NewFillWebPostBadRequest() *FillWebPostBadRequest {

	return &FillWebPostBadRequest{}
}

// WithPayload adds the payload to the fill web post bad request response
func (o *FillWebPostBadRequest) WithPayload(payload *models.Error) *FillWebPostBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the fill web post bad request response
func (o *FillWebPostBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FillWebPostBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FillWebPostUnprocessableEntityCode is the HTTP code returned for type FillWebPostUnprocessableEntity
const FillWebPostUnprocessableEntityCode int = 422

/*FillWebPostUnprocessableEntity Unprocessable Entity - syntax is correct, but the server was unable to process the contained instructions.

swagger:response fillWebPostUnprocessableEntity
*/
type FillWebPostUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewFillWebPostUnprocessableEntity creates FillWebPostUnprocessableEntity with default headers values
func NewFillWebPostUnprocessableEntity() *FillWebPostUnprocessableEntity {

	return &FillWebPostUnprocessableEntity{}
}

// WithPayload adds the payload to the fill web post unprocessable entity response
func (o *FillWebPostUnprocessableEntity) WithPayload(payload *models.Error) *FillWebPostUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the fill web post unprocessable entity response
func (o *FillWebPostUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FillWebPostUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FillWebPostInternalServerErrorCode is the HTTP code returned for type FillWebPostInternalServerError
const FillWebPostInternalServerErrorCode int = 500

/*FillWebPostInternalServerError Internal Server Error - The server has encountered a situation it does not know how to handle.

swagger:response fillWebPostInternalServerError
*/
type FillWebPostInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewFillWebPostInternalServerError creates FillWebPostInternalServerError with default headers values
func NewFillWebPostInternalServerError() *FillWebPostInternalServerError {

	return &FillWebPostInternalServerError{}
}

// WithPayload adds the payload to the fill web post internal server error response
func (o *FillWebPostInternalServerError) WithPayload(payload *models.Error) *FillWebPostInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the fill web post internal server error response
func (o *FillWebPostInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FillWebPostInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
